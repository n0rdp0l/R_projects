palette = "jco",            # jco journal color palett. see ?ggpar
sort.val = "asc",           # Sort the value in ascending order
sort.by.groups = FALSE,     # Don't sort inside each group
x.text.angle = 90,          # Rotate vertically x axis texts
ylab = "MPG z-score",
xlab = FALSE,
legend.title = "MPG Group"
)
ggbarplot(discrepancies, x = "name", y = "all",
#fill = "mpg_grp",           # change fill color by mpg_level
color = "white",            # Set bar border colors to white
palette = "jco",            # jco journal color palett. see ?ggpar
sort.val = "asc",           # Sort the value in ascending order
sort.by.groups = FALSE,     # Don't sort inside each group
x.text.angle = 90,          # Rotate vertically x axis texts
ylab = "MPG z-score",
xlab = FALSE,
legend.title = "MPG Group"
)
ggbarplot(discrepancies, x = "name", y = "all",
fill = factor("all"),           # change fill color by mpg_level
color = "white",            # Set bar border colors to white
palette = "jco",            # jco journal color palett. see ?ggpar
sort.val = "asc",           # Sort the value in ascending order
sort.by.groups = FALSE,     # Don't sort inside each group
x.text.angle = 90,          # Rotate vertically x axis texts
ylab = "MPG z-score",
xlab = FALSE,
legend.title = "MPG Group"
)
library(dplyr)
top_10 <- bind_rows(
discrepancies %>%
slice_min(all, n = 10, with_ties = F),
discrepancies %>%
slice_max(all, n = 10, with_ties = F)
)
ggbarplot(top_10, x = "name", y = "all",
fill = factor("all"),           # change fill color by mpg_level
color = "white",            # Set bar border colors to white
palette = "jco",            # jco journal color palett. see ?ggpar
sort.val = "asc",           # Sort the value in ascending order
sort.by.groups = FALSE,     # Don't sort inside each group
x.text.angle = 90,          # Rotate vertically x axis texts
ylab = "MPG z-score",
xlab = FALSE,
legend.title = "MPG Group"
)
top_10 <- bind_rows(
discrepancies %>%
slice_min(all, n = 10, with_ties = F),
discrepancies %>%
slice_max(all, n = 10, with_ties = F)
)
ggbarplot(top_10, x = "name", y = "all",
fill = factor("all"),           # change fill color by mpg_level
color = "white",            # Set bar border colors to white
palette = "jco",            # jco journal color palett. see ?ggpar
sort.val = "asc",           # Sort the value in ascending order
sort.by.groups = FALSE,     # Don't sort inside each group
x.text.angle = 75,          # Rotate vertically x axis texts
ylab = "MPG z-score",
xlab = FALSE,
legend.title = "MPG Group"
)
View(discrepancies)
top_10 <- bind_rows(
discrepancies %>%
slice_min(all, n = 10, with_ties = F)%>%
mutate(preference = "male"),
discrepancies %>%
slice_max(all, n = 10, with_ties = F)%>%
mutate(preference = "female")
)
ggbarplot(top_10, x = "name", y = "all",
fill = preference,           # change fill color by mpg_level
color = "white",            # Set bar border colors to white
palette = "jco",            # jco journal color palett. see ?ggpar
sort.val = "asc",           # Sort the value in ascending order
sort.by.groups = FALSE,     # Don't sort inside each group
x.text.angle = 75,          # Rotate vertically x axis texts
ylab = "MPG z-score",
xlab = FALSE,
legend.title = "preference"
)
View(top_10)
top_10 <- bind_rows(
discrepancies %>%
slice_min(all, n = 10, with_ties = F)%>%
mutate(preference = "male"),
discrepancies %>%
slice_max(all, n = 10, with_ties = F)%>%
mutate(preference = "female")
)
ggbarplot(top_10, x = "name", y = "all",
fill = "preference",           # change fill color by mpg_level
color = "white",            # Set bar border colors to white
palette = "jco",            # jco journal color palett. see ?ggpar
sort.val = "asc",           # Sort the value in ascending order
sort.by.groups = FALSE,     # Don't sort inside each group
x.text.angle = 75,          # Rotate vertically x axis texts
ylab = "MPG z-score",
xlab = FALSE,
legend.title = "preference"
)
top_10 <- bind_rows(
discrepancies %>%
slice_min(all, n = 10, with_ties = F)%>%
mutate(preference = "female"),
discrepancies %>%
slice_max(all, n = 10, with_ties = F)%>%
mutate(preference = "male")
)
ggbarplot(top_10, x = "name", y = "all",
fill = "preference",           # change fill color by mpg_level
color = "white",            # Set bar border colors to white
palette = "jco",            # jco journal color palett. see ?ggpar
sort.val = "asc",           # Sort the value in ascending order
sort.by.groups = FALSE,     # Don't sort inside each group
x.text.angle = 75,          # Rotate vertically x axis texts
ylab = "MPG z-score",
xlab = FALSE,
legend.title = "preference"
lab.size = 2,
top_10 <- bind_rows(
discrepancies %>%
slice_min(all, n = 10, with_ties = F)%>%
mutate(preference = "female"),
discrepancies %>%
slice_max(all, n = 10, with_ties = F)%>%
mutate(preference = "male")
)
ggbarplot(top_10, x = "name", y = "all",
fill = "preference",           # change fill color by mpg_level
color = "white",            # Set bar border colors to white
palette = "jco",            # jco journal color palett. see ?ggpar
sort.val = "asc",           # Sort the value in ascending order
sort.by.groups = FALSE,     # Don't sort inside each group
x.text.angle = 75,          # Rotate vertically x axis texts
ylab = "MPG z-score",
xlab = FALSE,
legend.title = "preference",
lab.size = 2
)
top_10 <- bind_rows(
discrepancies %>%
slice_min(all, n = 10, with_ties = F)%>%
mutate(preference = "female"),
discrepancies %>%
slice_max(all, n = 10, with_ties = F)%>%
mutate(preference = "male")
)
ggbarplot(top_10, x = "name", y = "all",
fill = "preference",           # change fill color by mpg_level
color = "white",            # Set bar border colors to white
palette = "jco",            # jco journal color palett. see ?ggpar
sort.val = "asc",           # Sort the value in ascending order
sort.by.groups = FALSE,     # Don't sort inside each group
x.text.angle = 75,          # Rotate vertically x axis texts
ylab = "MPG z-score",
xlab = FALSE,
legend.title = "preference",
lab.size = 20
)
top_10 <- bind_rows(
discrepancies %>%
slice_min(all, n = 10, with_ties = F)%>%
mutate(preference = "female"),
discrepancies %>%
slice_max(all, n = 10, with_ties = F)%>%
mutate(preference = "male")
)
ggbarplot(top_10, x = "name", y = "all",
fill = "preference",           # change fill color by mpg_level
color = "white",            # Set bar border colors to white
palette = "jco",            # jco journal color palett. see ?ggpar
sort.val = "asc",           # Sort the value in ascending order
sort.by.groups = FALSE,     # Don't sort inside each group
x.text.angle = 75,          # Rotate vertically x axis texts
ylab = "preference",
xlab = FALSE,
legend.title = "preference",
lab.size = 20
)
top_10 <- bind_rows(
discrepancies %>%
slice_min(all, n = 10, with_ties = F)%>%
mutate(preference = "female"),
discrepancies %>%
slice_max(all, n = 10, with_ties = F)%>%
mutate(preference = "male")
)
ggbarplot(top_10, x = "name", y = "all",
fill = "preference",           # change fill color by mpg_level
color = "white",            # Set bar border colors to white
palette = "jco",            # jco journal color palett. see ?ggpar
sort.val = "asc",           # Sort the value in ascending order
sort.by.groups = FALSE,     # Don't sort inside each group
x.text.angle = 75,          # Rotate vertically x axis texts
ylab = "difference",
xlab = FALSE,
legend.title = "preference",
lab.size = 20
)
top_10 <- bind_rows(
discrepancies %>%
slice_min(all, n = 10, with_ties = F)%>%
mutate(preference = "female"),
discrepancies %>%
slice_max(all, n = 10, with_ties = F)%>%
mutate(preference = "male")
)
ggbarplot(top_10, x = "name", y = "all",
fill = "preference",           # change fill color by mpg_level
color = "white",            # Set bar border colors to white
palette = "jco",            # jco journal color palett. see ?ggpar
sort.val = "asc",           # Sort the value in ascending order
x.text.angle = 75,          # Rotate vertically x axis texts
ylab = "difference",
xlab = FALSE,
legend.title = "preference",
lab.size = 20
)
top_10 <- bind_rows(
discrepancies %>%
slice_min(all, n = 10, with_ties = F)%>%
mutate(preference = "female"),
discrepancies %>%
slice_max(all, n = 10, with_ties = F)%>%
mutate(preference = "male")
)
ggbarplot(top_10, x = "name", y = "all",
fill = "preference",           # change fill color by mpg_level
color = "white",            # Set bar border colors to white
palette = "jco",            # jco journal color palett. see ?ggpar
sort.val = "desc",           # Sort the value in ascending order
x.text.angle = 75,          # Rotate vertically x axis texts
ylab = "difference",
xlab = FALSE,
legend.title = "preference",
lab.size = 20
)
top_10 <- bind_rows(
discrepancies %>%
slice_min(all, n = 10, with_ties = F)%>%
mutate(preference = "female"),
discrepancies %>%
slice_max(all, n = 10, with_ties = F)%>%
mutate(preference = "male")
)
ggbarplot(top_10, x = "name", y = "all",
fill = "preference",           # change fill color by mpg_level
color = "white",            # Set bar border colors to white
palette = "jco",            # jco journal color palett. see ?ggpar
sort.val = "asc",           # Sort the value in ascending order
x.text.angle = 75,          # Rotate vertically x axis texts
ylab = "difference",
xlab = FALSE,
legend.title = "preference",
lab.size = 0.20
)
ggbarplot(top_10, x = "name", y = "all",
fill = "preference",           # change fill color by mpg_level
color = "white",            # Set bar border colors to white
palette = "jco",            # jco journal color palett. see ?ggpar
sort.val = "asc",           # Sort the value in ascending order
x.text.angle = 75,          # Rotate vertically x axis texts
ylab = "difference",
xlab = FALSE,
legend.title = "preference",
lab.size = 0.20,
rotate = TRUE
)
top_10 <- bind_rows(
discrepancies %>%
slice_min(all, n = 10, with_ties = F)%>%
mutate(preference = "female"),
discrepancies %>%
slice_max(all, n = 10, with_ties = F)%>%
mutate(preference = "male")
)
ggbarplot(top_10, x = "name", y = "all",
fill = "preference",           # change fill color by mpg_level
color = "white",            # Set bar border colors to white
palette = "jco",            # jco journal color palett. see ?ggpar
sort.val = "asc",           # Sort the value in ascending order
x.text.angle = 75,          # Rotate vertically x axis texts
xlab = "difference",
ylab = FALSE,
legend.title = "preference",
lab.size = 0.20,
rotate = TRUE
)
top_10 <- bind_rows(
discrepancies %>%
slice_min(all, n = 10, with_ties = F)%>%
mutate(preference = "female"),
discrepancies %>%
slice_max(all, n = 10, with_ties = F)%>%
mutate(preference = "male")
)
ggbarplot(top_10, x = "name", y = "all",
fill = "preference",           # change fill color by mpg_level
color = "white",            # Set bar border colors to white
palette = "jco",            # jco journal color palett. see ?ggpar
sort.val = "asc",           # Sort the value in ascending order
x.text.angle = 90,          # Rotate vertically x axis texts
xlab = "difference",
ylab = FALSE,
legend.title = "preference",
lab.size = 0.20,
rotate = TRUE
)
top_10 <- bind_rows(
discrepancies %>%
slice_min(all, n = 10, with_ties = F)%>%
mutate(preference = "female"),
discrepancies %>%
slice_max(all, n = 10, with_ties = F)%>%
mutate(preference = "male")
)
ggbarplot(top_10, x = "name", y = "all",
fill = "preference",           # change fill color by mpg_level
color = "white",            # Set bar border colors to white
palette = "jco",            # jco journal color palett. see ?ggpar
sort.val = "asc",           # Sort the value in ascending order
x.text.angle = 90,          # Rotate vertically x axis texts
ylab = "difference",
ylab = FALSE,
legend.title = "preference",
lab.size = 0.20,
rotate = TRUE
)
top_10 <- bind_rows(
discrepancies %>%
slice_min(all, n = 10, with_ties = F)%>%
mutate(preference = "female"),
discrepancies %>%
slice_max(all, n = 10, with_ties = F)%>%
mutate(preference = "male")
)
ggbarplot(top_10, x = "name", y = "all",
fill = "preference",           # change fill color by mpg_level
color = "white",            # Set bar border colors to white
palette = "jco",            # jco journal color palett. see ?ggpar
sort.val = "asc",           # Sort the value in ascending order
x.text.angle = 90,          # Rotate vertically x axis texts
ylab = "difference",
xlab = FALSE,
legend.title = "preference",
lab.size = 0.20,
rotate = TRUE
)
top_10 <- bind_rows(
discrepancies %>%
slice_min(all, n = 10, with_ties = F)%>%
mutate(preference = "female"),
discrepancies %>%
slice_max(all, n = 10, with_ties = F)%>%
mutate(preference = "male")
)
ggbarplot(top_10, x = "name", y = "all",
fill = "preference",           # change fill color by mpg_level
color = "white",            # Set bar border colors to white
palette = "jco",            # jco journal color palett. see ?ggpar
sort.val = "asc",           # Sort the value in ascending order
x.text.angle = 90,          # Rotate vertically x axis texts
ylab = "difference",
ylab = FALSE,
legend.title = "preference",
lab.size = 0.20,
rotate = TRUE
)
top_10 <- bind_rows(
discrepancies %>%
slice_min(all, n = 10, with_ties = F)%>%
mutate(preference = "female"),
discrepancies %>%
slice_max(all, n = 10, with_ties = F)%>%
mutate(preference = "male")
)
ggbarplot(top_10, x = "name", y = "all",
fill = "preference",           # change fill color by mpg_level
color = "white",            # Set bar border colors to white
palette = "jco",            # jco journal color palett. see ?ggpar
sort.val = "asc",           # Sort the value in ascending order
x.text.angle = 90,          # Rotate vertically x axis texts
ylab = "difference",
legend.title = "preference",
lab.size = 0.20,
rotate = TRUE
)
top_10 <- bind_rows(
discrepancies %>%
slice_min(all, n = 10, with_ties = F)%>%
mutate(preference = "female"),
discrepancies %>%
slice_max(all, n = 10, with_ties = F)%>%
mutate(preference = "male")
)
ggbarplot(top_10, x = "name", y = "all",
fill = "preference",           # change fill color by mpg_level
color = "white",            # Set bar border colors to white
palette = "jco",            # jco journal color palett. see ?ggpar
sort.val = "asc",           # Sort the value in ascending order
x.text.angle = 90,          # Rotate vertically x axis texts
ylab = "rating difference",
legend.title = "preference",
lab.size = 0.20,
rotate = TRUE
)
top_10 <- bind_rows(
discrepancies %>%
slice_min(all, n = 10, with_ties = F)%>%
mutate(preference = "female"),
discrepancies %>%
slice_max(all, n = 10, with_ties = F)%>%
mutate(preference = "male")
)
ggbarplot(top_10, x = "name", y = "all",
fill = "preference",           # change fill color by mpg_level
color = "white",            # Set bar border colors to white
palette = "jco",            # jco journal color palett. see ?ggpar
sort.val = "asc",           # Sort the value in ascending order
x.text.angle = 90,          # Rotate vertically x axis texts
xlab = "rating difference",
legend.title = "preference",
lab.size = 0.20,
rotate = TRUE,
title = " gender discrepancies in movie ratings"
)
top_10 <- bind_rows(
discrepancies %>%
slice_min(all, n = 10, with_ties = F)%>%
mutate(preference = "female"),
discrepancies %>%
slice_max(all, n = 10, with_ties = F)%>%
mutate(preference = "male")
)
ggbarplot(top_10, x = "name", y = "all",
fill = "preference",           # change fill color by mpg_level
color = "white",            # Set bar border colors to white
palette = "jco",            # jco journal color palett. see ?ggpar
sort.val = "asc",           # Sort the value in ascending order
x.text.angle = 90,          # Rotate vertically x axis texts
xlab = FALSE,
ylab = "rating differences",
legend.title = "preference",
lab.size = 0.20,
rotate = TRUE,
title = " gender discrepancies in movie ratings"
)
top_10 <- bind_rows(
discrepancies %>%
slice_min(all, n = 10, with_ties = F)%>%
mutate(preference = "female"),
discrepancies %>%
slice_max(all, n = 10, with_ties = F)%>%
mutate(preference = "male")
)
ggbarplot(top_10, x = "name", y = "all",
fill = "preference",           # change fill color by mpg_level
color = "white",            # Set bar border colors to white
palette = "jco",            # jco journal color palett. see ?ggpar
sort.val = "asc",           # Sort the value in ascending order
x.text.angle = 90,          # Rotate vertically x axis texts
ylab = FALSE,
xlab = "rating differences",
legend.title = "preference",
lab.size = 0.20,
rotate = TRUE,
title = " gender discrepancies in movie ratings"
)
top_10 <- bind_rows(
discrepancies %>%
slice_min(all, n = 10, with_ties = F)%>%
mutate(preference = "female"),
discrepancies %>%
slice_max(all, n = 10, with_ties = F)%>%
mutate(preference = "male")
)
ggbarplot(top_10, x = "name", y = "all",
fill = "preference",           # change fill color by mpg_level
color = "white",            # Set bar border colors to white
palette = "jco",            # jco journal color palett. see ?ggpar
sort.val = "asc",           # Sort the value in ascending order
x.text.angle = 90,          # Rotate vertically x axis texts
ylab = "rating differences",
legend.title = "preference",
lab.size = 0.20,
rotate = TRUE,
title = " gender discrepancies in movie ratings"
)
top_10 <- bind_rows(
discrepancies %>%
slice_min(all, n = 10, with_ties = F)%>%
mutate(preference = "female"),
discrepancies %>%
slice_max(all, n = 10, with_ties = F)%>%
mutate(preference = "male")
)
ggbarplot(top_10, x = "name", y = "all",
fill = "preference",           # change fill color by mpg_level
color = "white",            # Set bar border colors to white
palette = "jco",            # jco journal color palett. see ?ggpar
sort.val = "asc",           # Sort the value in ascending order
x.text.angle = 90,          # Rotate vertically x axis texts
ylab = "rating differences",
legend.title = "preference",
lab.size = 0.20,
rotate = TRUE
)
